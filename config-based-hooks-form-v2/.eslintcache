[{"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js":"1","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js":"2","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js":"3","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js":"4","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js":"5","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js":"6","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js":"7","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js":"8","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Partners.js":"9"},{"size":564,"mtime":1611119122256,"results":"10","hashOfConfig":"11"},{"size":843,"mtime":1611120707559,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3954,"mtime":1611509958522,"results":"14","hashOfConfig":"11"},{"size":2236,"mtime":1611677179548,"results":"15","hashOfConfig":"11"},{"size":4951,"mtime":1611737969780,"results":"16","hashOfConfig":"11"},{"size":2786,"mtime":1610804866025,"results":"17","hashOfConfig":"11"},{"size":5588,"mtime":1611118986539,"results":"18","hashOfConfig":"11"},{"size":1653,"mtime":1611123621069,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4ufzdg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js",[],["41","42"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js",["43","44","45","46"],"import { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Dialog, DialogContent, DialogTitle, Divider, FormControlLabel, Grid, Typography } from '@material-ui/core'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport '../RenderCard.css'\r\nimport Form from './Form';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper : {\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    root: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nfunction RenderCard() {\r\n\r\n    const [cardConfig, setCardConfig] = useState()\r\n    const [shadow, setShadow] = useState(1)\r\n    const [cardInfo, setCardInfo] = useState({\r\n        category: \"\",\r\n        product: \"\"\r\n    })\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    // var cardConfig;\r\n\r\n    const onMouseOver = () => setShadow(3)\r\n    const onMouseOut = () => setShadow(1)\r\n\r\n    const handleClickOpen = (card) => {\r\n        console.log(card.category, card.product)\r\n        setCardInfo({\r\n            category: card.category,\r\n            product: card.product\r\n        })\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:9090/api/categories\").then((response) => {\r\n            console.log(response.data)\r\n            setCardConfig(response.data)\r\n        })\r\n    }, [])\r\n\r\n    const classes = useStyles()\r\n\r\n    const renderCard = (card, index) => {\r\n        return (\r\n            <Grid item xs={12} sm={4}>\r\n                <Card key={index} style={{maxWidth: 345, margin: 'auto', marginTop: 20}} onMouseOver={onMouseOver} onMouseOut={onMouseOut} zDepth={shadow}>\r\n                    <CardActionArea onClick={() => handleClickOpen(card)}>\r\n                        <CardMedia component=\"img\" image={card.image} height=\"140\" title={card.category}/>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {card.category}\r\n                            </Typography>\r\n                        {/* <Divider/>     */}\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    {/* <CardActions>\r\n                        <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={() => handleClickOpen(card)}>\r\n                            Proceed\r\n                        </Button>\r\n                    </CardActions> */}\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={`cardRender ${classes.root1}`}>\r\n            <Grid container spacing={3}>\r\n                {typeof cardConfig !== 'undefined' && cardConfig.map(renderCard)}\r\n            </Grid>\r\n            {cardInfo.category !== '' && \r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"sm\" fullWidth={true} classes = {{paper : classes.dialogWrapper}}>\r\n                    <DialogTitle>\r\n                        <div className=\"dialogTitle\">\r\n                            <div className=\"dialogTitle__close\">\r\n                                <CloseIcon onClick={handleClose}/>\r\n                            </div>\r\n                            <div className=\"dialogTitle__description\">\r\n                                <Typography component=\"h3\" variant=\"h5\">\r\n                                    {cardInfo.product}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Form cardInfo={cardInfo} setOpenPopup={setOpen}/>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderCard\r\n","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js",["47"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js",["48","49","50"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js",["51","52"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer({RenderComponent, location}) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon/>,\r\n      onClick: () => history.push(\"/\")\r\n    },\r\n    {\r\n      text: \"Services\",\r\n      icon: <BusinessIcon/>\r\n    },\r\n    {\r\n      text: \"Partners\",\r\n      icon: <LoyaltyIcon/>,\r\n      onClick: () => history.push(\"/partners\")\r\n    },\r\n    {\r\n      text: \"About Us\",\r\n      icon: <InfoIcon/>\r\n    }\r\n  ]\r\n\r\n  const locationData = location\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap style={{cursor: 'pointer'}} onClick={() => history.push(\"/\")}>\r\n            Insurance Bazaar\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {itemsList.map((item) => {\r\n            const {text, icon, onClick} = item\r\n            return (\r\n              <ListItem button key={text} onClick={onClick}>\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={text}/>\r\n              </ListItem>\r\n            )\r\n          })}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {typeof location.location.state === 'undefined' ? <RenderComponent/> : <RenderComponent locationData={location}/>}\r\n      </main>\r\n    </div>\r\n  );\r\n}","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Partners.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":1,"column":40,"nodeType":"59","messageId":"60","endLine":1,"endColumn":51},{"ruleId":"57","severity":1,"message":"62","line":1,"column":113,"nodeType":"59","messageId":"60","endLine":1,"endColumn":120},{"ruleId":"57","severity":1,"message":"63","line":1,"column":122,"nodeType":"59","messageId":"60","endLine":1,"endColumn":138},{"ruleId":"64","severity":1,"message":"65","line":53,"column":8,"nodeType":"66","endLine":53,"endColumn":10,"suggestions":"67"},{"ruleId":"57","severity":1,"message":"68","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},{"ruleId":"57","severity":1,"message":"69","line":4,"column":60,"nodeType":"59","messageId":"60","endLine":4,"endColumn":69},{"ruleId":"70","severity":1,"message":"71","line":43,"column":13,"nodeType":"72","messageId":"73","endLine":43,"endColumn":111},{"ruleId":"57","severity":1,"message":"74","line":19,"column":8,"nodeType":"59","messageId":"60","endLine":19,"endColumn":22},{"ruleId":"57","severity":1,"message":"75","line":126,"column":9,"nodeType":"59","messageId":"60","endLine":126,"endColumn":21},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Divider' is defined but never used.","'FormControlLabel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cardInfo.category' and 'cardInfo.product'. Either include them or remove the dependency array.","ArrayExpression",["78"],"'useState' is defined but never used.","'FormGroup' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'AssessmentIcon' is defined but never used.","'locationData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [cardInfo.category, cardInfo.product]",{"range":"81","text":"82"},[2009,2011],"[cardInfo.category, cardInfo.product]"]