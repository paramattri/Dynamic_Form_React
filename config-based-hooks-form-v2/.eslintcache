[{"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js":"1","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js":"2","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js":"3","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js":"4","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js":"5","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js":"6","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js":"7","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js":"8","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Partners.js":"9"},{"size":564,"mtime":1611119122256,"results":"10","hashOfConfig":"11"},{"size":843,"mtime":1611120707559,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":4721,"mtime":1610808405497,"results":"14","hashOfConfig":"11"},{"size":3069,"mtime":1610466908130,"results":"15","hashOfConfig":"11"},{"size":4144,"mtime":1610366226480,"results":"16","hashOfConfig":"11"},{"size":2786,"mtime":1610804866025,"results":"17","hashOfConfig":"11"},{"size":5588,"mtime":1611118986539,"results":"18","hashOfConfig":"11"},{"size":1653,"mtime":1611123621069,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4ufzdg",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js",[],["42","43"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js",["44","45","46","47"],"import { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Dialog, DialogContent, DialogTitle, Divider, FormControlLabel, Grid, Typography } from '@material-ui/core'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport '../RenderCard.css'\r\nimport Form from './Form';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper : {\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    root: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nfunction RenderCard() {\r\n\r\n    const [cardConfig, setCardConfig] = useState()\r\n    const [shadow, setShadow] = useState(1)\r\n    const [cardInfo, setCardInfo] = useState({\r\n        category: \"\",\r\n        product: \"\"\r\n    })\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    // var cardConfig;\r\n\r\n    const onMouseOver = () => setShadow(3)\r\n    const onMouseOut = () => setShadow(1)\r\n\r\n    const handleClickOpen = (card) => {\r\n        console.log(card.category, card.product)\r\n        setCardInfo({\r\n            category: card.category,\r\n            product: card.product\r\n        })\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:9090/api/categories\").then((response) => {\r\n            console.log(response.data)\r\n            setCardConfig(response.data)\r\n        })\r\n        // setCardConfig([\r\n        //     {\r\n        //         \"category\": \"Motor Insurance\", \r\n        //         \"product\": \"Car Insurance\",\r\n        //         \"image\": \"https://images.moneycontrol.com/static-mcnews/2018/03/car-insurance-770x433.jpg\"\r\n        //     },\r\n        //     {\r\n        //         \"category\": \"Travel Insurance\",\r\n        //         \"product\": \"Overseas Travel Insurance\",\r\n        //         \"image\": \"https://www.shriramgi.com/images/travelproductbg.jpg\"\r\n        //     },\r\n        //     {\r\n        //         \"category\": \"Health Insurance\",\r\n        //         \"product\": \"General Health Insurance\",\r\n        //         \"image\": \"https://images.financialexpress.com/2019/08/health-insurance.jpg\"\r\n        //     }\r\n        // ])\r\n    }, [])\r\n\r\n    const classes = useStyles()\r\n\r\n    const renderCard = (card, index) => {\r\n        return (\r\n            <Grid item xs={12} sm={4}>\r\n                <Card key={index} style={{maxWidth: 345, margin: 'auto', marginTop: 20}} onMouseOver={onMouseOver} onMouseOut={onMouseOut} zDepth={shadow}>\r\n                    <CardActionArea onClick={() => handleClickOpen(card)}>\r\n                        <CardMedia component=\"img\" image={card.image} height=\"140\" title={card.category}/>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {card.category}\r\n                            </Typography>\r\n                        {/* <Divider/>     */}\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    {/* <CardActions>\r\n                        <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={() => handleClickOpen(card)}>\r\n                            Proceed\r\n                        </Button>\r\n                    </CardActions> */}\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={`cardRender ${classes.root1}`}>\r\n            <Grid container spacing={3}>\r\n                {typeof cardConfig !== 'undefined' && cardConfig.map(renderCard)}\r\n            </Grid>\r\n            {cardInfo.category !== '' && \r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"sm\" fullWidth={true} classes = {{paper : classes.dialogWrapper}}>\r\n                    <DialogTitle>\r\n                        <div className=\"dialogTitle\">\r\n                            <div className=\"dialogTitle__close\">\r\n                                <CloseIcon onClick={handleClose}/>\r\n                            </div>\r\n                            <div className=\"dialogTitle__description\">\r\n                                <Typography component=\"h3\" variant=\"h5\">\r\n                                    {cardInfo.product}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Form cardInfo={cardInfo} setOpenPopup={setOpen}/>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderCard\r\n","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js",["48"],"import React, {useEffect, useState} from 'react'\r\nimport RenderForm from './RenderForm';\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Form({cardInfo, setOpenPopup}) {\r\n\r\n    const [formFields, setFormFields] = useState()\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (data) => {\r\n        const finalData = {category: cardInfo.category, product: cardInfo.product, formData: data}\r\n        console.log(\"Final Data to be sent => \", finalData)\r\n        axios.post(\"http://localhost:9090/api/response\", finalData).then((response) => {\r\n            console.log(\"Quote => \", response.data)\r\n            const quoteData = response.data\r\n            history.push(\"/quote\", {quoteData: JSON.stringify(quoteData)})\r\n        })\r\n        // const quoteData = [\r\n        //     {\r\n        //         \"partner\": \"Tata AIG\",\r\n        //         \"image\": \"https://www.tataaig.com/logo.png\",\r\n        //         \"quote\": {\r\n        //             \"idv\": \"50000\",\r\n        //             \"benefits\": \"Car benefits\",\r\n        //             \"others\": \"\"\r\n        //         }\r\n        //     },\r\n        //     {\r\n        //         \"partner\": \"Bajaj Allianz\",\r\n        //         \"image\": \"https://m.economictimes.com/thumb/height-450,width-600,imgsize-145233,msid-73152868/bajaj-allianz-general-insurance.jpg\",\r\n        //         \"quote\": {\r\n        //             \"idv\": \"40000\",\r\n        //             \"benefits\": \"Car benefits & Motor benefits\",\r\n        //             \"others\": \"Health benefits\"\r\n        //         }\r\n        //     }\r\n        // ]\r\n        \r\n        setOpenPopup(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:9090/api/config/category/${cardInfo.category}/product/${cardInfo.product}`).then((response) => {\r\n            console.log(\"Form Data\", response.data[0].fields)\r\n            setFormFields(response.data[0].fields)\r\n        })\r\n        // setFormFields([\r\n        //     {\r\n        //         \"name\": \"vehicleNo\",\r\n        //         \"type\": \"text\",\r\n        //         \"label\": \"Car Registration Number\",\r\n        //         \"placeholder\": \"Car Registration Number\"\r\n        //     },\r\n        //     {\r\n        //         \"name\": \"fullName\",\r\n        //         \"type\": \"text\",\r\n        //         \"label\": \"Full Name\",\r\n        //         \"placeholder\": \"Enter Full Name\"\r\n        //     },\r\n        //     {\r\n        //         \"name\": \"email\",\r\n        //         \"type\": \"email\",\r\n        //         \"label\": \"Email Address\",\r\n        //         \"placeholder\": \"Enter Email Id\"\r\n        //       },\r\n        //       {\r\n        //         \"name\": \"phoneNumber\",\r\n        //         \"type\": \"tel\",\r\n        //         \"label\": \"Phone Number\",\r\n        //         \"placeholder\": \"Enter Phone Number\"\r\n        //       }\r\n        // ])\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {typeof formFields !== 'undefined' && \r\n                <RenderForm formFields={formFields} onSubmit={onSubmit}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js",["49","50","51"],"import React, {useState} from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Container, FormControl, FormControlLabel, FormGroup, FormLabel, Radio, RadioGroup, TextField, Typography, Switch } from '@material-ui/core';\r\nimport '../RenderForm.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nfunction RenderForm({formFields, onSubmit}) {\r\n\r\n    const classes = useStyles();\r\n    const { register, handleSubmit, errors } = useForm()\r\n\r\n    const renderFields = (fields) => {\r\n\r\n        return fields.map(field => {\r\n            const { name, type, label, placeholder } = field\r\n\r\n            switch(type){\r\n\r\n                case 'text':\r\n                case 'email':\r\n                case 'tel':\r\n                case 'date':\r\n                case 'number':\r\n                    return (\r\n                        <div key={name}>\r\n                            <TextField id={name} name={name} type={type} label={label} placeholder={placeholder} inputRef={register}\r\n                                variant=\"outlined\" margin=\"normal\" required fullWidth/>\r\n                        </div>\r\n                    )\r\n                \r\n                case 'select':\r\n                    return (\r\n                        <div key={name}>\r\n                            <select id={name} name={name} ref={register}>\r\n                                <option value=\"\">Select Destination..</option>\r\n                                <option value=\"India\">India</option>\r\n                                <option value=\"England\">England</option>\r\n                                <option value=\"Australia\">Australia</option>\r\n                                <option value=\"USA\">USA</option>\r\n                            </select>  \r\n                        </div> \r\n                    )\r\n                \r\n                case 'radio':\r\n                    return (\r\n                        <div key={name}>\r\n                            <FormControl component=\"fieldset\" required>\r\n                                <FormLabel component=\"legend\">{label}</FormLabel>\r\n                                <RadioGroup row name={name}>\r\n                                    {field.items.map((item) => {\r\n                                        return <FormControlLabel key={item.value} value={item.value} control={<Radio inputRef={register}/>} label={item.label} labelPlacement=\"end\"/>\r\n                                    })}\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </div>\r\n                    )\r\n\r\n                default:\r\n                    return (\r\n                        <div key={name}>\r\n                            <span style={{color: 'red'}}>Invalid Field</span>\r\n                        </div>\r\n                    )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className=\"renderForm\">\r\n            <div className={classes.paper}>\r\n                <Typography variant=\"subtitle1\">\r\n                    Provide the following details\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    {renderFields(formFields)}\r\n                    <FormControlLabel \r\n                        control={<Switch name=\"sendUpdates\" inputRef={register}/>}\r\n                        labelPlacement=\"start\"\r\n                        label=\"Get updates on Email\"\r\n                    />\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RenderForm\r\n","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js",["52","53"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Partners.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":16},{"ruleId":"58","severity":1,"message":"62","line":1,"column":40,"nodeType":"60","messageId":"61","endLine":1,"endColumn":51},{"ruleId":"58","severity":1,"message":"63","line":1,"column":113,"nodeType":"60","messageId":"61","endLine":1,"endColumn":120},{"ruleId":"58","severity":1,"message":"64","line":1,"column":122,"nodeType":"60","messageId":"61","endLine":1,"endColumn":138},{"ruleId":"65","severity":1,"message":"66","line":74,"column":8,"nodeType":"67","endLine":74,"endColumn":10,"suggestions":"68"},{"ruleId":"58","severity":1,"message":"69","line":1,"column":16,"nodeType":"60","messageId":"61","endLine":1,"endColumn":24},{"ruleId":"58","severity":1,"message":"70","line":4,"column":60,"nodeType":"60","messageId":"61","endLine":4,"endColumn":69},{"ruleId":"58","severity":1,"message":"71","line":26,"column":37,"nodeType":"60","messageId":"61","endLine":26,"endColumn":43},{"ruleId":"58","severity":1,"message":"72","line":19,"column":8,"nodeType":"60","messageId":"61","endLine":19,"endColumn":22},{"ruleId":"58","severity":1,"message":"73","line":126,"column":9,"nodeType":"60","messageId":"61","endLine":126,"endColumn":21},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Divider' is defined but never used.","'FormControlLabel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cardInfo.category' and 'cardInfo.product'. Either include them or remove the dependency array.","ArrayExpression",["76"],"'useState' is defined but never used.","'FormGroup' is defined but never used.","'errors' is assigned a value but never used.","'AssessmentIcon' is defined but never used.","'locationData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [cardInfo.category, cardInfo.product]",{"range":"79","text":"80"},[2842,2844],"[cardInfo.category, cardInfo.product]"]