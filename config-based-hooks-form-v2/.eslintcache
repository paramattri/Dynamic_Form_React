[{"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js":"1","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js":"2","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js":"3","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js":"4","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js":"5","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js":"6","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":488,"mtime":1610103407655,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4159,"mtime":1610102011149,"results":"12","hashOfConfig":"9"},{"size":2805,"mtime":1610106433278,"results":"13","hashOfConfig":"9"},{"size":3011,"mtime":1610102574888,"results":"14","hashOfConfig":"9"},{"size":1714,"mtime":1610107666888,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4ufzdg",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js",[],["33","34"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js",["35"],"import { Button, Card, CardActions, CardContent, CardMedia, Dialog, DialogContent, DialogTitle, Grid, Typography } from '@material-ui/core'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport '../RenderCard.css'\r\nimport Form from './Form';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper : {\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    root: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nfunction RenderCard() {\r\n\r\n    const [cardConfig, setCardConfig] = useState()\r\n\r\n    const [cardInfo, setCardInfo] = useState({\r\n        category: \"\",\r\n        product: \"\"\r\n    })\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    // var cardConfig;\r\n\r\n    const handleClickOpen = (card) => {\r\n        console.log(card.category, card.product)\r\n        setCardInfo({\r\n            category: card.category,\r\n            product: card.product\r\n        })\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // axios.get(\"http://localhost:9090/api/\").then((response) => {\r\n        //     console.log(response.data)\r\n        //     cardConfig = response.data\r\n        // })\r\n        setCardConfig([\r\n            {\r\n                \"category\": \"Motor Insurance\", \r\n                \"product\": \"Car Insurance\",\r\n                \"image\": \"https://images.moneycontrol.com/static-mcnews/2018/03/car-insurance-770x433.jpg\"\r\n            },\r\n            {\r\n                \"category\": \"Travel Insurance\",\r\n                \"product\": \"Overseas Travel Insurance\",\r\n                \"image\": \"https://www.shriramgi.com/images/travelproductbg.jpg\"\r\n            },\r\n            {\r\n                \"category\": \"Health Insurance\",\r\n                \"product\": \"General Health Insurance\",\r\n                \"image\": \"https://images.financialexpress.com/2019/08/health-insurance.jpg\"\r\n            }\r\n        ])\r\n    }, [])\r\n\r\n    const classes = useStyles()\r\n\r\n    const renderCard = (card, index) => {\r\n        return (\r\n            <Grid item xs={12} sm={6}>\r\n                <Card key={index} style={{maxWidth: 345, margin: 'auto', marginTop: 20}}>\r\n                    <CardMedia image={card.image} style={{height: 140}}/>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {card.category}\r\n                        </Typography>    \r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button size=\"small\" color=\"primary\" onClick={() => handleClickOpen(card)}>\r\n                            Proceed\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"cardRender\">\r\n            <Grid container>\r\n                {typeof cardConfig !== 'undefined' && cardConfig.map(renderCard)}\r\n            </Grid>\r\n            {cardInfo.category !== '' && \r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"sm\" fullWidth={true} classes = {{paper : classes.dialogWrapper}}>\r\n                    <DialogTitle>\r\n                        <div className=\"dialogTitle\">\r\n                            <div className=\"dialogTitle__close\">\r\n                                <CloseIcon onClick={handleClose}/>\r\n                            </div>\r\n                            <div className=\"dialogTitle__description\">\r\n                                <Typography component=\"h3\" variant=\"h5\">\r\n                                    {cardInfo.product}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Form cardInfo={cardInfo} setOpenPopup={setOpen}/>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderCard\r\n","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js",["36"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js",["37"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Container, TextField, Typography } from '@material-ui/core';\r\nimport '../RenderForm.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nfunction RenderForm({formFields, onSubmit}) {\r\n\r\n    const classes = useStyles();\r\n    const { register, handleSubmit, errors } = useForm()\r\n\r\n    const renderFields = (fields) => {\r\n\r\n        return fields.map(field => {\r\n            const { name, type, label, placeholder } = field\r\n\r\n            switch(type){\r\n\r\n                case 'text':\r\n                case 'email':\r\n                case 'tel':\r\n                case 'date':\r\n                    return (\r\n                        <div key={name}>\r\n                            <TextField id={name} name={name} type={type} label={label} placeholder={placeholder} inputRef={register}\r\n                                variant=\"outlined\" margin=\"normal\" required fullWidth/>\r\n                        </div>\r\n                    )\r\n                \r\n                case 'select':\r\n                    return (\r\n                        <div key={name}>\r\n                            <select id={name} name={name} ref={register}>\r\n                                <option value=\"\">Select Destination..</option>\r\n                                <option value=\"India\">India</option>\r\n                                <option value=\"England\">England</option>\r\n                                <option value=\"Australia\">Australia</option>\r\n                                <option value=\"USA\">USA</option>\r\n                            </select>  \r\n                        </div> \r\n                    )\r\n                \r\n                default:\r\n                    return (\r\n                        <div key={name}>\r\n                            <span style={{color: 'red'}}>Invalid Field</span>\r\n                        </div>\r\n                    )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className=\"renderForm\">\r\n            <div className={classes.paper}>\r\n                <Typography variant=\"subtitle1\">\r\n                    Provide the following details\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    {renderFields(formFields)}\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RenderForm\r\n","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":26,"column":37,"nodeType":"44","messageId":"45","endLine":26,"endColumn":43},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]