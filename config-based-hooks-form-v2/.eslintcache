[{"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js":"1","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js":"2","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js":"3","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js":"4","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js":"5","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js":"6","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js":"7","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":664,"mtime":1610115711744,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":4493,"mtime":1610190032178,"results":"13","hashOfConfig":"10"},{"size":3069,"mtime":1610195521902,"results":"14","hashOfConfig":"10"},{"size":3011,"mtime":1610102574888,"results":"15","hashOfConfig":"10"},{"size":1843,"mtime":1610195632263,"results":"16","hashOfConfig":"10"},{"size":5539,"mtime":1610118292366,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4ufzdg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js",[],["37","38"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js",["39","40","41"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js",["42"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js",["43"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Container, TextField, Typography } from '@material-ui/core';\r\nimport '../RenderForm.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nfunction RenderForm({formFields, onSubmit}) {\r\n\r\n    const classes = useStyles();\r\n    const { register, handleSubmit, errors } = useForm()\r\n\r\n    const renderFields = (fields) => {\r\n\r\n        return fields.map(field => {\r\n            const { name, type, label, placeholder } = field\r\n\r\n            switch(type){\r\n\r\n                case 'text':\r\n                case 'email':\r\n                case 'tel':\r\n                case 'date':\r\n                    return (\r\n                        <div key={name}>\r\n                            <TextField id={name} name={name} type={type} label={label} placeholder={placeholder} inputRef={register}\r\n                                variant=\"outlined\" margin=\"normal\" required fullWidth/>\r\n                        </div>\r\n                    )\r\n                \r\n                case 'select':\r\n                    return (\r\n                        <div key={name}>\r\n                            <select id={name} name={name} ref={register}>\r\n                                <option value=\"\">Select Destination..</option>\r\n                                <option value=\"India\">India</option>\r\n                                <option value=\"England\">England</option>\r\n                                <option value=\"Australia\">Australia</option>\r\n                                <option value=\"USA\">USA</option>\r\n                            </select>  \r\n                        </div> \r\n                    )\r\n                \r\n                default:\r\n                    return (\r\n                        <div key={name}>\r\n                            <span style={{color: 'red'}}>Invalid Field</span>\r\n                        </div>\r\n                    )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className=\"renderForm\">\r\n            <div className={classes.paper}>\r\n                <Typography variant=\"subtitle1\">\r\n                    Provide the following details\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    {renderFields(formFields)}\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RenderForm\r\n","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js",["44","45"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer({RenderComponent, location}) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon/>,\r\n      onClick: () => history.push(\"/\")\r\n    },\r\n    {\r\n      text: \"Services\",\r\n      icon: <BusinessIcon/>\r\n    },\r\n    {\r\n      text: \"Partners\",\r\n      icon: <LoyaltyIcon/>\r\n    },\r\n    {\r\n      text: \"About Us\",\r\n      icon: <InfoIcon/>\r\n    }\r\n  ]\r\n\r\n  const locationData = location\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap style={{cursor: 'pointer'}} onClick={() => history.push(\"/\")}>\r\n            Insurance Bazaar\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {itemsList.map((item) => {\r\n            const {text, icon, onClick} = item\r\n            return (\r\n              <ListItem button key={text} onClick={onClick}>\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={text}/>\r\n              </ListItem>\r\n            )\r\n          })}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {typeof location.location.state === 'undefined' ? <RenderComponent/> : <RenderComponent locationData={location}/>}\r\n      </main>\r\n    </div>\r\n  );\r\n}",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":16},{"ruleId":"50","severity":1,"message":"54","line":1,"column":40,"nodeType":"52","messageId":"53","endLine":1,"endColumn":51},{"ruleId":"50","severity":1,"message":"55","line":1,"column":113,"nodeType":"52","messageId":"53","endLine":1,"endColumn":120},{"ruleId":"56","severity":1,"message":"57","line":74,"column":8,"nodeType":"58","endLine":74,"endColumn":10,"suggestions":"59"},{"ruleId":"50","severity":1,"message":"60","line":26,"column":37,"nodeType":"52","messageId":"53","endLine":26,"endColumn":43},{"ruleId":"50","severity":1,"message":"61","line":19,"column":8,"nodeType":"52","messageId":"53","endLine":19,"endColumn":22},{"ruleId":"50","severity":1,"message":"62","line":125,"column":9,"nodeType":"52","messageId":"53","endLine":125,"endColumn":21},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Divider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cardInfo.category' and 'cardInfo.product'. Either include them or remove the dependency array.","ArrayExpression",["65"],"'errors' is assigned a value but never used.","'AssessmentIcon' is defined but never used.","'locationData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [cardInfo.category, cardInfo.product]",{"range":"68","text":"69"},[2842,2844],"[cardInfo.category, cardInfo.product]"]