[{"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js":"1","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js":"2","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js":"3","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js":"4","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js":"5","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js":"6","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js":"7","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js":"8","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Partners.js":"9"},{"size":564,"mtime":1611119122256,"results":"10","hashOfConfig":"11"},{"size":843,"mtime":1611120707559,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3954,"mtime":1611509958522,"results":"14","hashOfConfig":"11"},{"size":3069,"mtime":1610466908130,"results":"15","hashOfConfig":"11"},{"size":4290,"mtime":1611554377344,"results":"16","hashOfConfig":"11"},{"size":2786,"mtime":1610804866025,"results":"17","hashOfConfig":"11"},{"size":5588,"mtime":1611118986539,"results":"18","hashOfConfig":"11"},{"size":1653,"mtime":1611123621069,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4ufzdg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\index.js",[],["42","43"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\App.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\reportWebVitals.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderCard.js",["44","45","46","47"],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Form.js",["48"],"import React, {useEffect, useState} from 'react'\r\nimport RenderForm from './RenderForm';\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Form({cardInfo, setOpenPopup}) {\r\n\r\n    const [formFields, setFormFields] = useState()\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (data) => {\r\n        const finalData = {category: cardInfo.category, product: cardInfo.product, formData: data}\r\n        console.log(\"Final Data to be sent => \", finalData)\r\n        axios.post(\"http://localhost:9090/api/response\", finalData).then((response) => {\r\n            console.log(\"Quote => \", response.data)\r\n            const quoteData = response.data\r\n            history.push(\"/quote\", {quoteData: JSON.stringify(quoteData)})\r\n        })\r\n        // const quoteData = [\r\n        //     {\r\n        //         \"partner\": \"Tata AIG\",\r\n        //         \"image\": \"https://www.tataaig.com/logo.png\",\r\n        //         \"quote\": {\r\n        //             \"idv\": \"50000\",\r\n        //             \"benefits\": \"Car benefits\",\r\n        //             \"others\": \"\"\r\n        //         }\r\n        //     },\r\n        //     {\r\n        //         \"partner\": \"Bajaj Allianz\",\r\n        //         \"image\": \"https://m.economictimes.com/thumb/height-450,width-600,imgsize-145233,msid-73152868/bajaj-allianz-general-insurance.jpg\",\r\n        //         \"quote\": {\r\n        //             \"idv\": \"40000\",\r\n        //             \"benefits\": \"Car benefits & Motor benefits\",\r\n        //             \"others\": \"Health benefits\"\r\n        //         }\r\n        //     }\r\n        // ]\r\n        \r\n        setOpenPopup(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:9090/api/config/category/${cardInfo.category}/product/${cardInfo.product}`).then((response) => {\r\n            console.log(\"Form Data\", response.data[0].fields)\r\n            setFormFields(response.data[0].fields)\r\n        })\r\n        // setFormFields([\r\n        //     {\r\n        //         \"name\": \"vehicleNo\",\r\n        //         \"type\": \"text\",\r\n        //         \"label\": \"Car Registration Number\",\r\n        //         \"placeholder\": \"Car Registration Number\"\r\n        //     },\r\n        //     {\r\n        //         \"name\": \"fullName\",\r\n        //         \"type\": \"text\",\r\n        //         \"label\": \"Full Name\",\r\n        //         \"placeholder\": \"Enter Full Name\"\r\n        //     },\r\n        //     {\r\n        //         \"name\": \"email\",\r\n        //         \"type\": \"email\",\r\n        //         \"label\": \"Email Address\",\r\n        //         \"placeholder\": \"Enter Email Id\"\r\n        //       },\r\n        //       {\r\n        //         \"name\": \"phoneNumber\",\r\n        //         \"type\": \"tel\",\r\n        //         \"label\": \"Phone Number\",\r\n        //         \"placeholder\": \"Enter Phone Number\"\r\n        //       }\r\n        // ])\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {typeof formFields !== 'undefined' && \r\n                <RenderForm formFields={formFields} onSubmit={onSubmit}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderForm.js",["49","50"],"import React, {useState} from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Container, FormControl, FormControlLabel, FormGroup, FormLabel, Radio, RadioGroup, TextField, Typography, Switch } from '@material-ui/core';\r\nimport '../RenderForm.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nfunction RenderForm({formFields, onSubmit}) {\r\n\r\n    const classes = useStyles();\r\n    const { register, handleSubmit, errors } = useForm()\r\n\r\n    const renderFields = (fields) => {\r\n\r\n        return fields.map(field => {\r\n            const { name, type, label, placeholder } = field\r\n\r\n            switch(type){\r\n\r\n                case 'text':\r\n                case 'email':\r\n                case 'tel':\r\n                case 'date':\r\n                case 'number':\r\n                    return (\r\n                        <div key={name}>\r\n                            <TextField id={name} name={name} type={type} label={label} placeholder={placeholder} inputRef={register({\"required\": true})}\r\n                                variant=\"outlined\" margin=\"normal\" fullWidth/>\r\n                                {console.log(name)}\r\n                            {errors.name && <span>This field is required</span>}\r\n                        </div>\r\n                    )\r\n                \r\n                case 'select':\r\n                    return (\r\n                        <div key={name}>\r\n                            <select id={name} name={name} ref={register}>\r\n                                <option value=\"\">Select Destination..</option>\r\n                                <option value=\"India\">India</option>\r\n                                <option value=\"England\">England</option>\r\n                                <option value=\"Australia\">Australia</option>\r\n                                <option value=\"USA\">USA</option>\r\n                            </select>  \r\n                        </div> \r\n                    )\r\n                \r\n                case 'radio':\r\n                    return (\r\n                        <div key={name}>\r\n                            <FormControl component=\"fieldset\" required>\r\n                                <FormLabel component=\"legend\">{label}</FormLabel>\r\n                                <RadioGroup row name={name}>\r\n                                    {field.items.map((item) => {\r\n                                        return <FormControlLabel key={item.value} value={item.value} control={<Radio inputRef={register}/>} label={item.label} labelPlacement=\"end\"/>\r\n                                    })}\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </div>\r\n                    )\r\n\r\n                default:\r\n                    return (\r\n                        <div key={name}>\r\n                            <span style={{color: 'red'}}>Invalid Field</span>\r\n                        </div>\r\n                    )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className=\"renderForm\">\r\n            <div className={classes.paper}>\r\n                <Typography variant=\"subtitle1\">\r\n                    Provide the following details\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    {renderFields(formFields)}\r\n                    <FormControlLabel \r\n                        control={<Switch name=\"sendUpdates\" inputRef={register}/>}\r\n                        labelPlacement=\"start\"\r\n                        label=\"Get updates on Email\"\r\n                    />\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RenderForm\r\n","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js",[],"D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js",["51","52"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer({RenderComponent, location}) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon/>,\r\n      onClick: () => history.push(\"/\")\r\n    },\r\n    {\r\n      text: \"Services\",\r\n      icon: <BusinessIcon/>\r\n    },\r\n    {\r\n      text: \"Partners\",\r\n      icon: <LoyaltyIcon/>,\r\n      onClick: () => history.push(\"/partners\")\r\n    },\r\n    {\r\n      text: \"About Us\",\r\n      icon: <InfoIcon/>\r\n    }\r\n  ]\r\n\r\n  const locationData = location\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap style={{cursor: 'pointer'}} onClick={() => history.push(\"/\")}>\r\n            Insurance Bazaar\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {itemsList.map((item) => {\r\n            const {text, icon, onClick} = item\r\n            return (\r\n              <ListItem button key={text} onClick={onClick}>\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={text}/>\r\n              </ListItem>\r\n            )\r\n          })}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {typeof location.location.state === 'undefined' ? <RenderComponent/> : <RenderComponent locationData={location}/>}\r\n      </main>\r\n    </div>\r\n  );\r\n}","D:\\Work\\School_Of_Fintech\\React_ConfigBasedApproach\\config-based-hooks-form-v2\\src\\components\\Partners.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":1,"column":40,"nodeType":"59","messageId":"60","endLine":1,"endColumn":51},{"ruleId":"57","severity":1,"message":"62","line":1,"column":113,"nodeType":"59","messageId":"60","endLine":1,"endColumn":120},{"ruleId":"57","severity":1,"message":"63","line":1,"column":122,"nodeType":"59","messageId":"60","endLine":1,"endColumn":138},{"ruleId":"64","severity":1,"message":"65","line":74,"column":8,"nodeType":"66","endLine":74,"endColumn":10,"suggestions":"67"},{"ruleId":"57","severity":1,"message":"68","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},{"ruleId":"57","severity":1,"message":"69","line":4,"column":60,"nodeType":"59","messageId":"60","endLine":4,"endColumn":69},{"ruleId":"57","severity":1,"message":"70","line":19,"column":8,"nodeType":"59","messageId":"60","endLine":19,"endColumn":22},{"ruleId":"57","severity":1,"message":"71","line":126,"column":9,"nodeType":"59","messageId":"60","endLine":126,"endColumn":21},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Divider' is defined but never used.","'FormControlLabel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cardInfo.category' and 'cardInfo.product'. Either include them or remove the dependency array.","ArrayExpression",["74"],"'useState' is defined but never used.","'FormGroup' is defined but never used.","'AssessmentIcon' is defined but never used.","'locationData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [cardInfo.category, cardInfo.product]",{"range":"77","text":"78"},[2842,2844],"[cardInfo.category, cardInfo.product]"]